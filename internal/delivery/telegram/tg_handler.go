package telegram

import (
	"telemed/internal/usecase"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

type BotHandler struct {
	bot     *tgbotapi.BotAPI
	patient *usecase.PatientService
	state   map[int64]string
	temp    map[int64]map[string]string
}

func NewBotHandler(bot *tgbotapi.BotAPI, patient *usecase.PatientService) *BotHandler {
	return &BotHandler{
		bot:     bot,
		patient: patient,
		state:   make(map[int64]string),
		temp:    make(map[int64]map[string]string),
	}
}

func (h *BotHandler) HandleUpdate(update tgbotapi.Update) {
	if update.Message == nil {
		return
	}
	chatID := update.Message.Chat.ID
	msgText := update.Message.Text

	switch msgText {
	case "/start":
		h.handleStart(chatID)
	default:
		h.handleUserInput(chatID, msgText)
	}
}

func (h *BotHandler) handleStart(chatID int64) {
	isRegistered := h.patient.Exists(chatID)

	if isRegistered {
		h.sendMainMenu(chatID)
		return
	}

	h.state[chatID] = "awaiting_name"
	h.temp[chatID] = make(map[string]string)
	h.bot.Send(tgbotapi.NewMessage(chatID,
		`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –¢–µ–ª–µ–º–µ–¥-–±–æ—Ç! ü§ñ

–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º:
‚Ä¢ üìÖ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–∏–µ–º –∫ –≤—Ä–∞—á—É
‚Ä¢ üí¨ –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é —É –ò–ò

–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è.

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û:`))
}

func (h *BotHandler) handleUserInput(chatID int64, msg string) {
	switch h.state[chatID] {
	case "awaiting_name":
		h.temp[chatID]["full_name"] = msg
		h.state[chatID] = "awaiting_iin"
		h.bot.Send(tgbotapi.NewMessage(chatID, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ò–ò–ù:"))

	case "awaiting_iin":
		fullName := h.temp[chatID]["full_name"]
		iin := msg

		err := h.patient.FindOrRegister(chatID, fullName, iin)
		if err != nil {
			h.bot.Send(tgbotapi.NewMessage(chatID, "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."))
			return
		}

		h.bot.Send(tgbotapi.NewMessage(chatID, "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!"))
		delete(h.state, chatID)
		delete(h.temp, chatID)

		h.sendMainMenu(chatID)

	default:
		h.bot.Send(tgbotapi.NewMessage(chatID, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞."))
	}
}

func (h *BotHandler) sendMainMenu(chatID int64) {
	msg := tgbotapi.NewMessage(chatID, "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?")
	msg.ReplyMarkup = tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìÖ –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ –≤—Ä–∞—á—É", "book_appointment"),
			tgbotapi.NewInlineKeyboardButtonData("üí¨ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –ò–ò", "ai_consultation"),
		),
	)
	h.bot.Send(msg)
}
